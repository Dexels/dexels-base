<?xml version="1.0" encoding="UTF-8" ?>
<project name="feature deploy" default="dockerpush" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<path id="navajo-ant-tasks.classpath" path="ant/lib/com.dexels.navajo.dev.ant-1.1.0-SNAPSHOT.jar" />
	<path id="build.classpath">
		<fileset dir="ant/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef name="appendpom" classname="com.dexels.navajo.dev.ant.AddDependenciesToPom" classpathref="navajo-ant-tasks.classpath" />
	<taskdef name="createp2" classname="com.dexels.navajo.dev.ant.CreateP2RepoPom" classpathref="build.classpath" />
	<taskdef name="copydeps" classname="com.dexels.navajo.dev.ant.CopyDependencies" classpathref="navajo-ant-tasks.classpath" />
	<property name="felix.version">6.0.3</property>
	<property name="felix.version.clean">6.0.3</property>

	<condition property="upload">
		<istrue value="${upload}" />
	</condition>

	<condition property="docker">
		<istrue value="${docker}" />
	</condition>

	<condition property="iscircle">
		<istrue value="${circle}" />
	</condition>

	<condition property="dockerpush">
		<and>
			<istrue value="${upload}" />
			<istrue value="${docker}" />
		</and>
	</condition>

	<target name="createtargetplatform">
		<delete dir="targetplatform" />
		<mkdir dir="targetplatform" />
		<createp2 groups="${groups}" transitive="false" id="dexels-navajo-target" version="${feature_version}" bundles="oao.cfg,sendrato.cfg,appstore.cfg,targetplatform.cfg,core.cfg" template="ant/pom-create-targetplatform-template.xml" destination="targetplatform/pom.xml" />
	</target>
	<target name="createmaven">
		<delete dir="temp" />
		<mkdir dir="temp" />
		<appendpom groups="${groups}" bundles="core.cfg,container.cfg" template="ant/pom-template.xml" destination="temp/pom.xml" />
	</target>

	<target name="runmaven" depends="createmaven">
		<exec dir="temp" executable="mvn">
			<arg value="-s" />
			<arg value="../.circleci/conf/settings.xml" />
			<arg value="install" />
			<arg value="-B" />
			<arg value="-U" />
		</exec>
	</target>
	<target name="runmaventargetplatform" depends="createtargetplatform">
		<exec dir="targetplatform" executable="mvn">
			<arg value="install" />
			<arg value="-B" />
		</exec>
	</target>
	<target name="uploadtargetplatform" if="upload" depends="runmaventargetplatform">
		<property name="user" value="navajo" />
		<property name="host" value="repo.dexels.com" />
		<property name="feature_version" value="${feature_version}" />
		<echo message="User home: ${user.home}" />
		<echo message="ssh: ${user}@${host}:/var/www/html/repo/eclipse/3rdparty_${feature_version}/" />
		<property name="dest" value="${user}@${host}:/var/www/html/repo/eclipse/3rdparty_${feature_version}/" />
		<echo message="cd ${basedir}/targetplatform &amp;&amp; scp -r . ${dest}" />
		<sshexec knownhosts="${user.home}/.ssh/known_hosts" host="${host}" trust="true" username="${user}" keyfile="${user.home}/.ssh/id_rsa" command="mkdir -p /var/www/html/repo/eclipse/3rdparty_${feature_version}/" />
		<scp trust="true" knownhosts="${user.home}/.ssh/known_hosts" verbose="TRUE" todir="${dest}" keyfile="${user.home}/.ssh/id_rsa">
			<fileset dir="targetplatform/target/repository">
				<include name="**/*" />
			</fileset>
		</scp>
	</target>
	<target name="unpackfelix" depends="runmaven">
		<mkdir dir="temp/unpack" />
		<untar dest="temp/unpack" compression="gzip" src="${user.home}/.m2/repository/org/apache/felix/org.apache.felix.main.distribution/${felix.version}/org.apache.felix.main.distribution-${felix.version}.tar.gz"></untar>
		<move todir="temp/unpack/felix">
			<fileset dir="temp/unpack/felix-framework-${felix.version.clean}" />
		</move>
	</target>

	<target name="createdistro" depends="unpackfelix">
		<echo message="Bundles: ${bundles}" />
		<copydeps destination="temp/unpack/felix/bundle" bundles="core.cfg" groups="${groups}" />
	</target>

	<target name="customizedistro" depends="createdistro">
		<copy todir="temp/unpack/felix/conf">
			<fileset dir="overlay/conf" />
		</copy>
		<mkdir dir="temp/unpack/felix/data" />

		<copy todir="temp/unpack/felix/load">
			<fileset dir="overlay/load" />
		</copy>
		<copy todir="temp/unpack/felix">
			<fileset dir="overlay/">
				<include name="**/*" />
			</fileset>
		</copy>
		<exec dir="temp/unpack/felix" executable="chmod">
			<arg value="a+x" />
			<arg value="navajo.sh" />
		</exec>
	</target>

	<target name="gzip" depends="customizedistro">
		<mkdir dir="target" />
		<tar destfile="target/${distro}.tar.gz" compression="gzip">
			<fileset dir="temp/unpack/felix">
				<include name="**/*" />
				<exclude name="felix-cache/**" />
			</fileset>
		</tar>
	</target>
	<target name="mavendeploy" depends="gzip" if="upload">
		<exec dir="target" executable="mvn">
			<arg value="deploy:deploy-file" />
			<arg value="-DrepositoryId=dexels" />
			<arg value="-Durl=http://repo.dexels.com/nexus/content/repositories/thirdparty" />
			<arg value="-DgroupId=com.dexels.navajo.release" />
			<arg value="-DartifactId=${distro}" />
			<arg value="-Dversion=${version}" />
			<arg value="-Dfile=${distro}.tar.gz" />
			<arg value="-Dpackaging=tar.gz" />
			<arg value="-B" />
		</exec>
	</target>
	<target name="dockersetup" depends="mavendeploy">
		<mkdir dir="temp/container" />
		<copy todir="temp/" file="container/Dockerfile" />
		<copy todir="temp/">
			<fileset dir="container">
				<include name="scripts/**" />
			</fileset>
		</copy>
		<echo message="docker build -t dexels/${distro}:${version} ." />
	</target>
	<target name="docker" depends="dockersetup" if="docker">
		<exec dir="temp" executable="docker">
			<arg value="build" />
			<arg value="-t" />
			<arg value="dexels/${distro}:${version}" />
			<arg value="." />
		</exec>
	</target>
	<target name="dockerpush" depends="docker" if="dockerpush">
		<echo message="docker push dexels/${distro}:${version}" />
		<exec dir="temp" executable="docker">
			<arg value="push" />
			<arg value="dexels/${distro}:${version}" />
		</exec>
	</target>

</project>