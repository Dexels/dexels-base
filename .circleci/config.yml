version: 2
jobs:
  targetplatform:
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx1000m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-targetplatform-{{ .Branch }}-{{ checksum "maven-cache-version" }}
      - run:
          name: Run Ant createtargetplatform
          command: |
            ant targetplatform -Dversion="${MINORTAG}.${CIRCLE_BUILD_NUM}"
            cd targetplatform
            mvn -s "../.circleci/conf/settings.xml" install -B -U -ff
            cd ..
      - run:
          name: Upload(scp) thirdparty P2 Environment to repo.dexels.com
          command: |
            ssh -o StrictHostKeyChecking=no navajo@repo.dexels.com "mkdir -p /var/www/html/repo/eclipse/3rdparty_${MINORTAG}.${CIRCLE_BUILD_NUM}/"
            scp -r targetplatform/target/repository/* navajo@repo.dexels.com:/var/www/html/repo/eclipse/3rdparty_${MINORTAG}.${CIRCLE_BUILD_NUM}
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-targetplatform-{{ .Branch }}-{{ checksum "maven-cache-version" }}

  build:
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx1000m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v1-{{ .Branch }}-{{ checksum "maven-cache-version" }}
      - run:
          # TODO cleanup antfiles remove all unneeded targets
          name: Runt Ant alldistros (dockersetup)
          command: |
            ant alldistros -Ddocker=false -Dupload=false -Dbundles=core.cfg -Dversion=${MINORTAG}.${CIRCLE_BUILD_NUM} -debug
            ls -l target
      - store_artifacts:
          path: ~/repo/target/dexels-base.tar.gz
          destination: dexels-base.tgz
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "maven-cache-version" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - temp
            - targetplatform
            - .git

  package:
    machine:
      image: circleci/classic:edge
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Set Docker credentials
          command: |
            docker --version
            echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin

      - run:
          name: Docker build and push dexels-base image
          command: |
            TAG=${MINORTAG}.$CIRCLE_BUILD_NUM
            echo "Building tag: $TAG"
            cd ~/repo
            ls -l
            export GIT_REMOTE=$(git config --get remote.origin.url)
            export GIT_COMMIT=$(git rev-parse HEAD)
            echo "Adding remote: ${GIT_REMOTE} and commit: ${GIT_COMMIT}"
            docker build --build-arg DEXELS_BASE_COMMIT=${GIT_COMMIT} --build-arg DEXELS_BASE_REMOTE=${GIT_REMOTE} -t dexels/dexels-base:$TAG -t dexels/dexels-base:latest temp
            docker push dexels/dexels-base:$TAG
            docker push dexels/dexels-base:latest

      - run:
          name: Trigger navajo CircleCI build
          command: |
            curl -X POST \
              --header "Content-Type: application/json" \
              --header "Circle-Token: ${CIRCLE_TOKEN}" \
              -d '{"branch":"master"}' \
              "https://circleci.com/api/v1.1/project/github/dexels/navajo/build"
            # curl -X POST --header "Content-Type: application/json" -d '{"branch":"master"}' "https://circleci.com/api/v1.1/project/github/dexels/navajo-streams/build?circle-token=${CIRCLE_TOKEN}"

workflows:
  version: 2
  workflow:
    jobs:
    - targetplatform:
        context:
        - dexels_docker_hub
    - build:
        context:
        - dexels_docker_hub
    - package:
        context:
        - dexels_docker_hub
        requires:
        - build
